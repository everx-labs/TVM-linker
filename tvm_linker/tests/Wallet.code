.globl	constructor
.public	constructor
.type	constructor, @function
PRINTSTR constr_prot_0
PUSHINT 0
;; decl: dict
PUSHINT 0
;; decl: previous_message_timestamp
PUSHINT 1800000
;; decl: interval
PUSHROOT
CTOS
;; decl: c4
;; c4
;; stack=4
DUP
LDDICT
POP s2
;; assign dict
POP s4
;; if
;; c4
;; stack=4
DUP
PUSHINT 128
SCHKBITSQ
PUSHCONT {
	;; c4
	;; stack=4
	DUP
	LDI 64
	POP s2
	;; assign previous_message_timestamp
	POP s3
	;; c4
	;; stack=4
	DUP
	LDI 64
	POP s2
	;; assign interval
	POP s2
	;; if
	;; c4
	;; stack=4
	DUP
	PUSHINT 1
	SCHKBITSQ
	PUSHCONT {
		PUSHINT 123
		THROWANY
	}
	IF
}
IF
NEWC
;; decl: c4_builder
;; dict
;; stack=5
PUSH s4
SWAP
STDICT
;; previous_message_timestamp
;; stack=5
PUSH s3
STUR 64
;; interval
;; stack=5
PUSH s2
STUR 64
PUSHINT 1
STONES
;; c4
;; stack=5
PUSH s1
STSLICER
;; c4_builder
;; stack=5
DUP
ENDC
POPROOT
PRINTSTR constr_prot_1
BLKDROP 5
ACCEPT
; Decode input parameters
DROP
CALL $constructor_Wallet$
PRINTSTR pushpdc7toc4
PUSHROOT
CTOS
;; decl: c4
SKIPDICT
NEWC
;; decl: c4_builder
PUSHCTR c7
THIRD
SWAP
STDICT
;; c4
;; stack=2
PUSH s1
STSLICER
;; c4_builder
;; stack=2
DUP
ENDC
POPROOT
PRINTSTR pushpdc7toc40
BLKDROP 2
RET

.globl	constructor_Wallet
.type	constructor_Wallet, @function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: constructor_Wallet
PUSHCTR c7
SECOND
FIRST
;; assign owner
NEWC STU 256
PUSHINT 100
PUSH c7 THIRD
PUSHINT 64
DICTUSETB
PUSH c7
SWAP
SETTHIRD
POP c7

.globl	sendTransaction
.public	sendTransaction
.type	sendTransaction, @function
; Decode input parameters
PUSHINT 256
CALL $smart_ldu$
PUSHINT 128
CALL $smart_ldu$
PUSHINT 1
CALL $smart_ldi$
DROP
CALL $sendTransaction_internal$
PRINTSTR pushpdc7toc4
PUSHROOT
CTOS
;; decl: c4
SKIPDICT
NEWC
;; decl: c4_builder
PUSHCTR c7
THIRD
SWAP
STDICT
;; c4
;; stack=2
PUSH s1
STSLICER
;; c4_builder
;; stack=2
DUP
ENDC
POPROOT
PRINTSTR pushpdc7toc40
BLKDROP 2
RET

.globl	sendTransaction_internal
.type	sendTransaction_internal, @function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: sendTransaction_internal
;; param: dest
;; param: value
;; param: bounce
PUSHCTR c7
SECOND
FIRST
;; owner
;; stack=4
PUSHINT 100
PUSH c7 THIRD
PUSHINT 64
DICTUGET
PUSHCONT { LDU 256 ENDS }
PUSHCONT { PUSHINT 0 }
IFELSE
;; ==
EQUAL
;; subscription
;; stack=4
PUSHINT 101
PUSH c7 THIRD
PUSHINT 64
DICTUGET
PUSHCONT { LDU 256 ENDS }
PUSHCONT { PUSHINT 0 }
IFELSE
PUSHINT 0
;; address
UFITS 256
;; !=
NEQ
;; get member sender
PUSHCTR c7
SECOND
SECOND
;; subscription
;; stack=6
PUSHINT 101
PUSH c7 THIRD
PUSHINT 64
DICTUGET
PUSHCONT { LDU 256 ENDS }
PUSHCONT { PUSHINT 0 }
IFELSE
;; ==
EQUAL
;; &&
AND
;; ||
OR
THROWIFNOT 100
;; value
;; stack=3
PUSH s1
PUSHINT 0
;; >
GREATER
;; value
;; stack=4
PUSH s2
;; get member balance
CALL $get_contract_balance$
;; <
LESS
;; &&
AND
THROWIFNOT 102
;; dest
;; stack=3
PUSH s2
PUSHINT 0
;; address
UFITS 256
;; !=
NEQ
THROWIFNOT 103
;; dest
;; stack=3
PUSH s2
;; value
;; stack=4
PUSH s2
;; bounce
;; stack=5
PUSH s2
PUSHINT 0
CALL $accurate_transfer$
BLKDROP 3

.globl	setSubscriptionAccount
.public	setSubscriptionAccount
.type	setSubscriptionAccount, @function
; Decode input parameters
PUSHINT 256
CALL $smart_ldu$
DROP
CALL $setSubscriptionAccount_internal$
PRINTSTR pushpdc7toc4
PUSHROOT
CTOS
;; decl: c4
SKIPDICT
NEWC
;; decl: c4_builder
PUSHCTR c7
THIRD
SWAP
STDICT
;; c4
;; stack=2
PUSH s1
STSLICER
;; c4_builder
;; stack=2
DUP
ENDC
POPROOT
PRINTSTR pushpdc7toc40
BLKDROP 2
RET

.globl	setSubscriptionAccount_internal
.type	setSubscriptionAccount_internal, @function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: setSubscriptionAccount_internal
;; param: addr
PUSHCTR c7
SECOND
FIRST
;; owner
;; stack=2
PUSHINT 100
PUSH c7 THIRD
PUSHINT 64
DICTUGET
PUSHCONT { LDU 256 ENDS }
PUSHCONT { PUSHINT 0 }
IFELSE
;; ==
EQUAL
THROWIFNOT 100
;; addr
;; stack=1
DUP
;; assign subscription
NEWC STU 256
PUSHINT 101
PUSH c7 THIRD
PUSHINT 64
DICTUSETB
PUSH c7
SWAP
SETTHIRD
POP c7
DROP

.globl	getSubscriptionAccount
.public	getSubscriptionAccount
.type	getSubscriptionAccount, @function
; Decode input parameters
DROP
CALL $getSubscriptionAccount_internal$
;; emitting 1 value(s)
NEWC
PUSHINT $getSubscriptionAccount$
PUSHINT 2147483648
OR
STUR 32
NEWC
PUSH s2
STUR 256
STBREFR
CALL $send_ext_msg$
RET

.globl	getSubscriptionAccount_internal
.type	getSubscriptionAccount_internal, @function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: getSubscriptionAccount_internal
;; subscription
;; stack=0
PUSHINT 101
PUSH c7 THIRD
PUSHINT 64
DICTUGET
PUSHCONT { LDU 256 ENDS }
PUSHCONT { PUSHINT 0 }
IFELSE
;; return
RET

.globl	fallback
.type	fallback, @function
DROP
RET

.globl	onBounce
.type	onBounce, @function
DROP
RET

