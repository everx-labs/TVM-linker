.globl	constructor_MyContract
.type	constructor_MyContract, @function
RET

.globl	constructor
.public	constructor
.type	constructor, @function
PRINTSTR constr_prot_0
PUSHINT 0
;; decl: dict
PUSHINT 0
;; decl: previous_message_timestamp
PUSHINT 1800000
;; decl: interval
PUSHROOT
CTOS
;; decl: c4
;; c4
;; stack=4
DUP
LDDICT
POP s2
;; assign dict
POP s4
;; if
;; c4
;; stack=4
DUP
PUSHINT 128
SCHKBITSQ
PUSHCONT {
	;; c4
	;; stack=4
	DUP
	LDI 64
	POP s2
	;; assign previous_message_timestamp
	POP s3
	;; c4
	;; stack=4
	DUP
	LDI 64
	POP s2
	;; assign interval
	POP s2
	;; if
	;; c4
	;; stack=4
	DUP
	PUSHINT 1
	SCHKBITSQ
	PUSHCONT {
		PUSHINT 123
		THROWANY
	}
	IF
}
IF
NEWC
;; decl: c4_builder
;; dict
;; stack=5
PUSH s4
SWAP
STDICT
;; previous_message_timestamp
;; stack=5
PUSH s3
STUR 64
;; interval
;; stack=5
PUSH s2
STUR 64
PUSHINT 1
STONES
;; c4
;; stack=5
PUSH s1
STSLICER
;; c4_builder
;; stack=5
DUP
ENDC
POPROOT
PRINTSTR constr_prot_1
BLKDROP 5
ACCEPT
; Decode input parameters
DROP
PRINTSTR pushpdc7toc4
PUSHROOT
CTOS
;; decl: c4
SKIPDICT
NEWC
;; decl: c4_builder
PUSHCTR c7
THIRD
SWAP
STDICT
;; c4
;; stack=2
PUSH s1
STSLICER
;; c4_builder
;; stack=2
DUP
ENDC
POPROOT
PRINTSTR pushpdc7toc40
BLKDROP 2

.globl	get_allowance
.public	get_allowance
.type	get_allowance, @function
; Decode input parameters
PUSHINT 256
CALL $smart_ldu$
DROP
CALL $get_allowance_internal$
PRINTSTR pushpdc7toc4
PUSHROOT
CTOS
;; decl: c4
SKIPDICT
NEWC
;; decl: c4_builder
PUSHCTR c7
THIRD
SWAP
STDICT
;; c4
;; stack=2
PUSH s1
STSLICER
;; c4_builder
;; stack=2
DUP
ENDC
POPROOT
PRINTSTR pushpdc7toc40
BLKDROP 2
RET

.globl	get_allowance_internal
.type	get_allowance_internal, @function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: get_allowance_internal
;; param: requester
;; requester
;; stack=1
DUP
;; decl: r
;; Remote call RemoteContract.on_get_allowance
;; r
;; stack=2
DUP
NEWC
PUSHINT $on_get_allowance$
STUR 32
NEWC
;; amount
PUSHINT 0
STUR 64
STBREFR
CALL $send_int_msg_2$
PUSHINT 1000
;; r
;; stack=3
PUSH s1
;; Remote call RemoteContract.on_get_allowance
NEWC
PUSHINT $on_get_allowance$
STUR 32
NEWC
;; amount
PUSHINT 0
STUR 64
STBREFR
CALL $send_grams$
;; stack=2
;; return
BLKDROP 2
RET

.globl	fallback
.type	fallback, @function
DROP
RET

.globl	onBounce
.type	onBounce, @function
DROP
RET

.globl	on_get_allowance
.type	on_get_allowance, @function
RET

