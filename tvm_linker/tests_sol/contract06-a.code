 
.globl	setAllowance_external
.type	setAllowance_external, @function
LDU 256
LDU 64
DROP
PUSHINT $setAllowance$
CALL 1
RET
 
.globl	setAllowance
.type	setAllowance, @function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: setAllowance
;; param: anotherContract
;; param: amount
;; fetch m_allowed
PUSHINT 0
PUSHROOT CTOS PLDDICT
PUSHINT 256
DICTUGETOPTREF
;; anotherContract
;; stack=3
PUSH s2
SWAP
OVER OVER
PUSHINT 256
DICTUGETOPTREF
;; ContractInfo.allowed
PUSHINT 0
SWAP
;; amount
;; stack=6
PUSH s4
NEWC STU 64 ENDC CTOS
ROTREV
PUSHINT 8
DICTUSET
ROTREV
PUSHINT 256
DICTUSETREF
;; assign m_allowed
PUSHINT 0
PUSHROOT CTOS PLDDICT
PUSHINT 256
DICTUSETREF
NEWC STDICT ENDC
POPROOT
BLKDROP 2
 
.globl	getCredit_external
.type	getCredit_external, @function
DROP
PUSHINT $getCredit$
CALL 1
RET
 
.globl	getCredit
.type	getCredit, @function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: getCredit
;; get member sender
PUSHINT $get_msg_sender$
CALL 1
;; IMyContractCallback
;; stack=1
;; IMyContractCallback.getCreditCallback
;; balance
;; get member allowed
;; ContractInfo.allowed
PUSHINT 0
;; get member sender
PUSHINT $get_msg_sender$
CALL 1
;; m_allowed
;; stack=3
PUSHINT 0
PUSHROOT CTOS PLDDICT
PUSHINT 256
DICTUGETOPTREF
;; index
PUSHINT 256
DICTUGETOPTREF
PUSHINT 8
DICTUGET
PUSHCONT { LDU 64 ENDS }
PUSHCONT { PUSHINT 0 }
IFELSE
NEWC
PUSHINT 0
STUR 8
PUSHINT $getCreditCallback_external$
STUR 32
;; balance
STU 64
ENDC CTOS
PUSHINT $send_int_msg_2$
CALL 1
;; return
RET

.globl	getCreditCallback_external
.type	getCreditCallback_external, @function
RET
