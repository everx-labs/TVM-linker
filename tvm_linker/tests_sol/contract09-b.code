 
.globl	acceptMoneyAndNumber_external
.type	acceptMoneyAndNumber_external, @function
LDU 64
DROP
PUSHINT $acceptMoneyAndNumber$
CALL 1
RET
 
.globl	acceptMoneyAndNumber
.type	acceptMoneyAndNumber, @function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: acceptMoneyAndNumber
;; param: number
;; number
;; stack=1
DUP
;; assign m_number
NEWC STU 64 ENDC CTOS
PUSHINT 0
PUSHROOT CTOS PLDDICT
PUSHINT 256
DICTUSET
NEWC STDICT ENDC
POPROOT
;; get member value
PUSHINT $get_msg_balance$
CALL 1
;; assign m_msg_value
NEWC STU 256 ENDC CTOS
PUSHINT 1
PUSHROOT CTOS PLDDICT
PUSHINT 256
DICTUSET
NEWC STDICT ENDC
POPROOT
DROP
